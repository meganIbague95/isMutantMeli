{
  "swagger": "2.0",
  "info": {
    "version": "2021-03-26T23:08:29Z",
    "title": "ValidateMutants"
  },
  "host": "ln0tppjw8b.execute-api.us-east-2.amazonaws.com",
  "basePath": "/Produccion",
  "schemes": [
    "https"
  ],
  "paths": {
    "/mutant": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dna",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dna"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/dnaResponse"
            }
          },
          "403": {
            "description": "403 response",
            "schema": {
              "$ref": "#/definitions/dnaResponse"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:102287414076:function:lambda-validate/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^403.+": {
              "statusCode": "403",
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\r\n{\r\n\"message\":\"$inputRoot.errorMessage\"\r\n}"
              }
            }
          },
          "requestTemplates": {
            "application/json": "#set($inputRoot = $input.path('$'))\r\n{\r\n\"input\":$inputRoot.input\r\n}"
          },
          "passthroughBehavior": "when_no_templates",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/stats": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "lastEvaluatedKey",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/showResponse"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:102287414076:function:lambda-show/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\r\n{\r\n\"stats\":$inputRoot.stats,\r\n\"lastEvaluatedKey\":\"$inputRoot.lastEvaluatedKey\"\r\n}"
              }
            }
          },
          "requestTemplates": {
            "application/json": "#set($inputRoot = $input.path('$'))\r\n{\r\n  \"lastEvaluatedKey\":\"$input.params('lastEvaluatedKey')\"\r\n}"
          },
          "passthroughBehavior": "when_no_templates",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    }
  },
  "definitions": {
    "showResponse": {
      "required": [
        "lastEvaluatedKey",
        "stats"
      ],
      "properties": {
        "stats": {
          "type": "array"
        },
        "lastEvaluatedKey": {
          "type": "string"
        }
      }
    },
    "Empty": {
      "type": "object",
      "title": "Empty Schema"
    },
    "dna": {
      "required": [
        "input"
      ],
      "properties": {
        "input": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dnaResponse": {
      "type": "string",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  }
}